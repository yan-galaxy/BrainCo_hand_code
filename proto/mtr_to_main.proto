syntax = "proto3";
import "stark_common.proto";
import "main_mtr_shared.proto";

//Motor Data
message MtrFeedback
{
	repeated FingerStatus current_finger_status = 1;
	uint32 seq_num = 2;
	FingerStatusSampleRate sample_rate = 3;
	FingerStatus expected_finger_status = 4;	//only send one group since the feedback message will be stop and re-start after expectation changed
	bool fingers_locked = 5;
}

//Notify if Button is being pressed
message ButtonEvent
{
	enum PressStatus
	{
		UNUSED = 0;
		PRESSING = 1;	//pressing will be sent every 200ms, and must already pressed 200ms and above.
		NOT_PRESSING = 2;
	}
	PressStatus press_status = 1;
	uint32 timestamp = 2;
}

message BatVoltResp
{
	float bat_volt = 1;
}

message HandTypeResp
{
	HandType hand_type = 1;
}
// Response Message: driver_board --> main_board
message U_MtrToMain
{
	//ImuData imu_data = 1;
	MtrFeedback motor_feedback = 2;
	ButtonEvent button_event = 3;
	BatVoltResp bat_volt_resp = 4;
	HandTypeResp hand_type_resp = 5;
}
